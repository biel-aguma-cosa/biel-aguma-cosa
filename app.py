background = [[
['■','■','■','■','■','■','■','■','■','■','■','■','■','■','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','■','■','■','■','■','■','■','■','■','■','■','■','■','■']],
[
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■','■','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■','■','■',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ']],
[
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■','■','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','■','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','■','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','■','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■','■','■',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ']],
[
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ','■','■','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ','■','□','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','□','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ']],
[
['■','■','■','■','■','■','■','■','■','■','■','■','■','■','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','■','■','■','■','■','□','□','□','□','■'],
['■','□','□','□','□','■','■','■','■','■','□','□','□','□','■'],
['■','□','□','□','□','■','■','■','■','■','□','□','□','□','■'],
['■','□','□','□','□','■','■','■','■','■','□','□','□','□','■'],
['■','□','□','□','□','■','■','■','■','■','□','□','□','□','■'],
['■','□','□','□','□','■','■','■','■','■','□','□','□','□','■'],
['■','□','□','□','□','□','■','■','■','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','■','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','■','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','■','■','■','□','□','□','□','□','■'],
['■','□','□','□','□','■','■','■','■','■','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','■','■','■','■','■','■','■','■','■','■','■','■','■','■']]
]

b = ''
players = []
boxes = []
buttons = []
background = []

def processy(num):
    r = (num*-1) + 7
    return r
def processx(num):
    r = num + 7
    return r

y0 = processy(0)
x0 = processx(0)

def level_up(self):
    global c_background
    global buttons
    if self.img == '◙':
        for button in buttons[:]:
            if c_background == button.z:
                if self.x == button.x and self.y == button.y and self.z == button.z:
                    c_background += 1

class entity_:
    def __init__(self,inx,iny,img,z):
        self.inx = inx
        self.iny = iny
        self.x = processx(inx)
        self.y = processy(iny)
        self.z = z
        self.img = img
    def move_x(self,x_):
        global c_background
        if self.z == c_background:
            if (background[self.z][self.y][processx(self.inx + x_)] == '□'):
                self.inx = self.inx + x_
                self.x = (processx(self.inx))
            elif ((background[self.z][self.y][processx(self.iny + x_)] == '←') and (x_ == -1)):
                self.inx = self.inx + x_
                self.x = (processx(self.inx))
            elif ((background[self.z][self.y][processx(self.iny + x_)] == '→') and (x_ == 1)):
                self.inx = self.inx + x_
                self.x = (processx(self.inx))
            elif (background[self.z][self.y][processx(self.inx + x_)] == '◌'):
                self.inx = self.inx + x_
                self.x = (processx(self.inx))
            elif (background[self.z][self.y][processx(self.inx + x_)] == '◙') and self.img != '◙':
                if (background[self.z][self.y][processx(self.inx + x_*2)] == '□' or background[self.z][self.y][processx(self.inx + x_*2)] == '◌') or ((background[self.z][self.y][processx(self.inx + x_*2)] == '←') and x_ == -1) or ((background[self.z][self.y][processx(self.inx + x_*2)] == '→') and x_ == 1):
                    self.inx = self.inx + x_
                    for box in boxes[:]:
                        if box.inx == self.inx and box.iny == self.iny and box.z == self.z and background:
                            box.move_x(x_)
                    self.x = (processx(self.inx))
    def move_y(self,y_):
        global c_background
        if self.z == c_background:
            if (background[self.z][processy(self.iny + y_)][self.x] == '□'):
                self.iny = self.iny + y_
                self.y = (processy(self.iny))
            elif (background[self.z][processy(self.iny + y_)][self.x] == '↑') and y_ == 1:
                self.iny = self.iny + y_
                self.y = (processy(self.iny))
            elif (background[self.z][processy(self.iny + y_)][self.x] == '↓') and y_ == -1:
                self.iny = self.iny + y_
                self.y = (processy(self.iny))
            elif (background[self.z][processy(self.iny + y_)][self.x] == '◌'):
                self.iny = self.iny + y_
                self.y = (processy(self.iny))
            elif (background[self.z][processy(self.iny + y_)][self.x] == '◙') and self.img != '◙':
                if (background[self.z][processy(self.iny + y_*2)][self.x] == '□' or background[self.z][processy(self.iny + y_*2)][self.x] == '◌') or (background[self.z][processy(self.iny + y_*2)][self.x] == '↑' and y_ == 1) or (background[self.z][processy(self.iny + y_*2)][self.x] == '↓' and y_ == -1):
                    self.iny = self.iny + y_
                    for box in boxes[:]:
                        if box.iny == self.iny and box.iny == self.iny and box.z == self.z and background:
                            box.move_y(y_)
                    self.y = (processy(self.iny))
last_lvl = -1
for backgrounds in background[:]:
    last_lvl +=1
players.append(entity_(inx=-4,iny=0,img='☻',z=0))
boxes.append(entity_(inx=4,iny=-0,img='◙',z=0))
buttons.append(entity_(inx=0,iny=3,img='◌',z=0))
boxes.append(entity_(inx=4,iny=-0,img='◙',z=last_lvl))
players.append(entity_(inx=-4,iny=0,img='☻',z=last_lvl))

players.append(entity_(inx=-2,iny=2,img='☻',z=1))
boxes.append(entity_(inx=-1,iny= 0,img='◙',z=1))
buttons.append(entity_(inx=1,iny=0,img='◌',z=1))

players.append(entity_(inx=-2,iny=1,img='☻',z=2))
boxes.append(entity_(inx= 1,iny=-2,img='◙',z=2))
boxes.append(entity_(inx= 0,iny= 1,img='◙',z=2))
buttons.append(entity_(inx=2,iny=2,img='◌',z=2))

players.append(entity_(inx=-2,iny=2,img='☻',z=3))
boxes.append(entity_(inx= 0,iny= 0,img='◙',z=3))
boxes.append(entity_(inx= 1,iny= 0,img='◙',z=3))
boxes.append(entity_(inx= 0,iny=-2,img='◙',z=3))
buttons.append(entity_(inx=2,iny=2,img='◌',z=3))

players.append(entity_(inx=-2,iny=0,img='☻',z=4))
boxes.append(entity_(inx=-1,iny= 1,img='◙',z=4))
boxes.append(entity_(inx=-1,iny= 0,img='◙',z=4))
boxes.append(entity_(inx=-1,iny=-1,img='◙',z=4))
buttons.append(entity_(inx=0,iny=3,img='◌',z=4))

players.append(entity_(inx=-2,iny=2,img='☻',z=5))
boxes.append(entity_(inx=-1,iny= 0,img='◙',z=5))
buttons.append(entity_(inx=1,iny=0,img='◌',z=5))

players.append(entity_(inx=-2-1,iny=0,img='☻',z=6))
boxes.append(entity_(inx= 0-1,iny= 3,img='◙',z=6))
boxes.append(entity_(inx= 2-1,iny= 3,img='◙',z=6))
boxes.append(entity_(inx= 1-1,iny= 2,img='◙',z=6))
boxes.append(entity_(inx= 1-1,iny= 4,img='◙',z=6))
boxes.append(entity_(inx=-1-1,iny= 2,img='◙',z=6))
boxes.append(entity_(inx=-1-1,iny= 4,img='◙',z=6))
boxes.append(entity_(inx= 1-1,iny= 0,img='◙',z=6))
boxes.append(entity_(inx= 2,iny= 0,img='◙',z=6))
boxes.append(entity_(inx= 2-1,iny= 0,img='◙',z=6))
boxes.append(entity_(inx= 1-1,iny=-2,img='◙',z=6))
boxes.append(entity_(inx=-1-1,iny=-2,img='◙',z=6))
boxes.append(entity_(inx=-1-1,iny=-3,img='◙',z=6))
boxes.append(entity_(inx=-1-1,iny=-4,img='◙',z=6))
buttons.append(entity_(inx=3,iny=0,img='◌',z=6))
#○
c_background=1
printer = ''
def load_screen():
    global b
    global printer
    global background
    printer = ''
    for box in boxes[:]:
        level_up(box)
    background = [[
['■','■','■','■','■','■','■','■','■','■','■','■','■','■','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','■','□','■','□','■','□','■','□','□','□','□','■'],#'._______________________________________________.')
['■','□','□','□','↑','□','□','□','↓','□','□','□','□','□','■'],#'|    exit = ×   |     w = ↑     |               |')
['■','□','□','■','□','■','□','■','□','■','□','□','□','□','■'],#'|     a = ←     |     s = ↓     |     d = →     |')
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],#'|---------------|---------------|---------------|')
['■','□','□','■','□','■','□','■','□','■','□','□','□','□','■'],#'|   ◙ + ◌ = ♥   |   ☻ → ◙ → □   >   ☻ → □ → ◙   |')
['■','□','□','□','←','□','□','□','→','□','□','□','□','□','■'],#'|_______________|_______________|_______________|')
['■','□','□','■','□','■','□','■','□','■','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','□','□','□','□','□','□','□','□','□','□','□','□','□','■'],
['■','■','■','■','■','■','■','■','■','■','■','■','■','■','■']],
[
['I','N','I','C','I','O',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■','■','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■','■','■',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1']],
[
['A','R','V','O','R','E',' ','C','A','I','D','A',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■','■','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','■','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','■','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','■','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■','■','■',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','2']],
[
['D','O','S','E',' ','D','U','P','L','A',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■','■','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','■','□','■','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','■','□','■','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','■','□','■','□','■','■',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','□','□','□','■',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■','■','■','■',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','3']],
[
['B','L','O','Q','U','E','I','O',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ','■','■','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ','■','□','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','□','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','4']],
[
['C','O','R','R','N','T','E','Z','A',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■','■','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','↑','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','↑','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','↑','□','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','↑','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','□','□','□','↑','□','■',' ',' ',' ',' '],
[' ',' ',' ',' ','■','■','■','■','■','■','■',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','5']],
[
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
[' ',' ','I','N','C','O','M','P','L','E','T','O','‼',' ',' '],
[' ',' ',' ','■','■','■','■','■','■','■',' ',' ',' ',' ',' '],
[' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' ',' '],
[' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' ',' '],
[' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' ',' '],
[' ',' ',' ','■','□','■','■','↓','□','■','■','■',' ',' ',' '],
[' ',' ',' ','■','□','□','□','□','□','□','□','■',' ',' ',' '],
[' ',' ',' ','■','□','■','■','□','↑','■','■','■',' ',' ',' '],
[' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' ',' '],
[' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' ',' '],
[' ',' ',' ','■','□','□','□','□','□','■',' ',' ',' ',' ',' '],
[' ',' ',' ','■','■','■','■','■','■','■',' ',' ',' ',' ',' '],
[' ',' ','I','N','C','O','M','P','L','E','T','O','‼',' ',' '],
[' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','6']],
[
['■','■','■','■','■','■','■','■','■','■','■','■','■','■','■'],
['■',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','■'],
['■',' ',' ',' ',' ','■','■','■','■','■',' ',' ',' ',' ','■'],
['■',' ',' ',' ',' ','■','■','■','■','■',' ',' ',' ',' ','■'],
['■',' ',' ',' ',' ','■','■','■','■','■',' ',' ',' ',' ','■'],
['■',' ',' ',' ',' ','■','F','I','M','■',' ',' ',' ',' ','■'],
['■',' ',' ',' ',' ','■','■','■','■','■',' ',' ',' ',' ','■'],
['■',' ',' ',' ',' ','■','■','■','■','■',' ',' ',' ',' ','■'],
['■',' ',' ',' ',' ',' ','■','■','■',' ',' ',' ',' ',' ','■'],
['■',' ',' ',' ',' ',' ',' ','■',' ',' ',' ',' ',' ',' ','■'],
['■',' ',' ',' ',' ',' ',' ','■',' ',' ',' ',' ',' ',' ','■'],
['■',' ',' ',' ',' ',' ','■','■','■',' ',' ',' ',' ',' ','■'],
['■',' ',' ',' ',' ','■','■','■','■','■',' ',' ',' ',' ','■'],
['■',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','■'],
['■','■','■','■','■','■','■','■','■','■','■','■','■','■','■']]
]

    for n in [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]:
        print('')
    for button in buttons[:]:
        if button.z == c_background:
            background[button.z][button.y][button.x] = button.img
    for player in players[:]:
        if player.z == c_background:
            background[player.z][player.y][player.x] = player.img
    for box in boxes[:]:
        if box.z == c_background:
            background[box.z][box.y][box.x] = box.img
    print('._______________________________________________.')
    print('|    sair = ×   |     w = ↑     |               |')
    print('|     a = ←     |     s = ↓     |     d = →     |')
    print('|---------------|---------------|---------------|')
    print('|   ◙ + ◌ = ♥   |   ☻ → ◙ → □   >   ☻ → □ → ◙   |')
    print('|_______________|_______________|_______________|')
    for line_h in background[c_background][:]:
        for item_y in line_h[:]:
            printer = printer + '  ' + item_y
        print(printer)
        printer = ''

    b = input()
def key_input():
    global b
    global c_background
    for player in players[:]:
        if player.z == c_background:
            if b == 'a':
                player.move_x(-1)
            if b == 'w':
                player.move_y(1)
            if b == 'd':
                player.move_x(1)
            if b == 's':
                player.move_y(-1)
while b != 'sair':
    load_screen()
    key_input()

